# configure database access to postgreSQL/PostGIS Database
spring.datasource.driverClassName=org.postgresql.Driver

# JDBC Connection string. format: jdbc:postgresql://<host>:<port>/<database>
spring.datasource.url=jdbc:postgresql://localhost:5432/change_detect_demo
spring.datasource.username=postgres
spring.datasource.password=secret

# Configure logging
# uncomment this to configure logging to a file
#logging.file=logicaldecoding.log

# Setting log Levels
#logging.level.org.springframework.web=DEBUG
#logging.level.de.swm.nis.logicaldecoding=DEBUG

# Name of the Replication Slot to fetch changes from
postgresql.replicationSlotName=repslot_test

# EPSG-code of the Spatial Reference System used in your Database (no Support for mixed SRIDS)
postgresql.epsgCode=4326

# Buffering Points into Polygons in the change detect table (in SRS units)
# minimum size of objects
pointObjects.miniumSize=0.0001f

# buffer to apply
pointObjects.buffer=0.001f

# number of changes to fetch during one run of the refresh task
scheduling.numChangesToFetch=200

# time to wait after completion of the last refresh task in milliseconds
scheduling.interval=10000

# changes in these schemata are considered to be relevant
# changes in all other schemata are ignored.
filter.includeSchema=data

# GeoWebCache Base Configuration
# Module active?
gwc.doSeed=false

# Path to base URL of GeowebCache's REST API
gwc.rest.baseurl=http://localhost:8081/geoserver/gwc/rest/
gwc.username=admin
gwc.password=geoserver

# GWC Seeding options
gwc.layername=spielwiese:landkreis_neu
gwc.zoomstop=5
gwc.zoomstart=0
gwc.operation=truncate
gwc.threadcount=1
gwc.imageformat=image/png

# configure schema and tablename for postGIS table displaying change bounds, timestamp, metainfo, old an new values

# Module active?
tracktable.doPublish=true
tracktable.schemaname=metadata
tracktable.tablename=changeset

# More details to configure the column names inside tracktable.tablename table
# Its safe to leave these commented out as the values given here will be used as default if these properties are missing.
# Column to store a commit timestamp, must be of PostgreSQL type 'timestamp with time zone'
#tracktable.commitTimestampColumn=commit_ts

# Column to store a Transaction Id, must be of PostgreSQL type 'bigint'
#tracktable.transactionIdColumn=transaction_id

# Column to store the whole record before the change, must be of PostgreSQL type 'jsonb'
#tracktable.jsonOldValuesColumn=oldvalues

# Column to store the whole record aftr the change, must be of PostgreSQL type 'jsonb'
#tracktable.jsonNewValuesColumn=newvalues

# Column to store some metadata in 'key1=value1, key2=value2' form, must be of PostgreSQL type 'text'
# see tracktable.metainfo.searchpatterns for more configuration which columns of the original table to consider here
#tracktable.metaInfoColumn=metadata

# Column to store the Minimum bounding Rectangle of the geometries combined over old and new geometries, must be of PostgreSQL type 'Polygon'
#tracktable.regionColumn=region

# Column to store the table name of the modified table, must be of PostgreSQL type 'text'
#tracktable.tableColumn=table

# Column to store the schema name of the modified table, must be of PostgreSQL type 'text'
#tracktable.schemaColumn=schema

# Column to store the type of modification (insert, update or delete), must be of PostgreSQL type 'text'
#tracktable.transactionTypeColumn=type

# configure which columns of the original tables should appear in the tracktable metainfo column.
# matches begin and end of column names
tracktable.metainfo.searchpatterns=_id,bearbeiter,beginndatum
